/******************************************************************************
 * Copyright (c) 2020-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/

mdl 1.3;

import ::df::*;
import ::tex::*;

/* function name changes to color_fresnel_layer() in 1.4 */
export material test_fresnel_layer()
= material(
    surface: material_surface(scattering: df::fresnel_layer(
       ior: color()
    ))
);

/* add uv_tile parameter in 1.4 */
export int test_height() { return tex::height(texture_2d()); }
export int test_width()  { return tex::width(texture_2d()); }

/* add uv_tile parameter in 1.4 */
export color  test_texel_color()  { return tex::texel_color(texture_2d(), int2(0,0)); }
export float  test_texel_float()  { return tex::texel_float(texture_2d(), int2(0,0)); }
export float2 test_texel_float2() { return tex::texel_float2(texture_2d(), int2(0,0)); }
export float3 test_texel_float3() { return tex::texel_float3(texture_2d(), int2(0,0)); }
export float4 test_texel_float4() { return tex::texel_float4(texture_2d(), int2(0,0)); }
