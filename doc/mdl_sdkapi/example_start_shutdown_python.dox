/******************************************************************************
 * Copyright (c) 2021-2025, NVIDIA CORPORATION. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  * Neither the name of NVIDIA CORPORATION nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/

/*! \page mi_neuray_example_start_shutdown_python Example for Starting and Shutting Down the MDL SDK


<div align="right">
    [\link mi_neuray_bindings_python Up\endlink]
    [\link mi_neuray_example_modules_python Next\endlink]
</div>

This example accesses the main \neurayAdjectiveName interface, queries the version interface, and 
then starts and shuts down the \neurayApiName.
\section example_start_shutdown_python_new New Topics

  - Naming conventions.
  - Main import files.
  - Main API access point.
  - Interfaces and handles.
  - Starting and shutting down the \neurayApiName.

\section example_start_shutdown_python_descr Detailed Description


<dl>
    <dt><b>
        Naming conventions
    </b></dt>
    <dd><br>
        \NeurayProductName is written in C++ and the Python bindings are generated by \c SWIG and
        follow the same naming conventions as the native API.
        Multiple words are concatenated with \c _ to form identifiers. 
        Function names are all lower case, while types and classes start with one initial upper-case letter.
        <!-- Workaround to prevent a layout problem after dd tags. -->
    </dd>
    <dt><b>
        Main import files
    </b></dt>
    <dd><br>
        The \c pymdlsdk.py module contains all required classes and functions of the bindings.
        <!-- Workaround to prevent a layout problem after dd tags. -->
    </dd>
    <dt><b>
        Main API access point
    </b></dt>
    <dd><br>
        Analogue to the C++ examples, the Python bindings come with a helper function to loads the
        neuray library and calls their only public access point, the #mi_factory() function.
        This helper function \c load_and_get_ineuray() accepts a parameter of type string to specify
        the filepath of the native \c libmdl_sdk.dll (or \c libmdl_sdk.so). 
        The file extension itself can be omitted to not require platform dependent Python code.
        Passing an empty string will look for \c libmdl_sdk in the \c PATH, \c LD_LIBRARY_PATH, or 
        \c DYLD_LIBRARY_PATH depending on the platform.

        Calling the helper function returns #mi::neuraylib::INeuray interface from which all other
        data structures and functions can be accessed.
        The #mi::neuraylib::INeuray interface can only be accessed once per process.
        \code
neuray = pymdlsdk.load_and_get_ineuray('')
if not neuray.is_valid_interface():
    raise Exception('Failed to load the MDL SDK.')
        \endcode
        <!-- Workaround to prevent a layout problem after dd tags. -->
    </dd>
    <dt><b>
        Interfaces and handles
    </b></dt>
    <dd><br>
        Except for trivial classes, such as the math vector class, all classes in the
        \neurayApiName are implemented using \e interfaces. See \ref mi_neuray_design
        for an explanation. Interfaces are created and destroyed by the \neurayApiName.
        They implement reference counting for life-time control and cheap copying operations.
        Interface names start with an \c I prefix.

        The Python bindings take care of the reference counting as long as the context manager pattern 
        is used or objects are released explicitly (see \ref mi_neuray_bindings_python_refcounts).

        The context managers also work in places where the native API would return a nullptr.
        In the Python bindings these null-pointers are not represented by \c None.
        Instead, an object is always returned.
        To check if an MDL object is valid, all interface provide an \c is_valid_interface() function.
        <!-- Workaround to prevent a layout problem after dd tags. -->
    </dd>
    <dt><b>
        Starting and shutting down the \neurayApiName
    </b></dt>
    <dd><br>
        The #mi::neuraylib::INeuray interface is used to start and shut down the \neurayApiName.
        The API can only be used after it has been started (and before it has been shut down).
        Startup does not happen during the #mi_factory() or \c load_and_get_ineuray call because you 
        might want to configure the behavior of the API, which has to happen before startup.

        The status of the API can be queried using the #mi::neuraylib::INeuray::get_status()
        method.

        Finally, you have to shut down the \neurayApiName. At this point, you should have released
        all interface objects except the main #mi::neuraylib::INeuray interface.
        <!-- Workaround to prevent a layout problem after dd tags. -->
    </dd>
</dl>

<b>Source Code Location:</b><br>
  <tt>examples/mdl_python/start_shutdown/example_start_shutdown.py</tt>


<div align="right">
    [\link mi_neuray_bindings_python Up\endlink]
    [\link mi_neuray_example_modules_python Next\endlink]
</div>

*/
